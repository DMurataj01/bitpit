// ========================================================================== //
//                         - SORTING ALGORITHMS -                             //
//                                                                            //
// Functions for data sorting.                                                //
// ========================================================================== //
// INFO                                                                       //
// Author    : Alessandro Alaia                                               //
// Version   : v2.0                                                           //
//                                                                            //
// All rights reserved.                                                       //
// ========================================================================== //

// ========================================================================== //
// TEMPLATE IMPLEMENTATIONS                                                   //
// ========================================================================== //

// Constructors ============================================================= //

// -------------------------------------------------------------------------- //
template <class T>
LIFOstack<T>::LIFOstack(
    void
) {

// ========================================================================== //
// template <class T>                                                         //
// LIFOstack<T>::LIFOstack(                                                   //
//     coid)                                                                  //
//                                                                            //
// Standard constructor for LIFO stack.                                       //
// ========================================================================== //
// INPUT                                                                      //
// ========================================================================== //
// - none                                                                     //
// ========================================================================== //
// OUTPUT                                                                     //
// ========================================================================== //
// - none                                                                     //
// ========================================================================== //

// ========================================================================== //
// VARIABLES DECLARATION                                                      //
// ========================================================================== //

// Local variables
// none

// Counters
// none

// ========================================================================== //
// CREATE LIFO STACK                                                          //
// ========================================================================== //

// Max stack dimensions
MAXSTK = 10;

// Initialize stack
IncreaseSTACK();

// Currenst stack size
TOPSTK = 0;

return; };

// -------------------------------------------------------------------------- //
template <class T>
LIFOstack<T>::LIFOstack(
    int         maxstack
) {

// ========================================================================== //
// template <class T>                                                         //
// LIFOstack<T>::LIFOstack(                                                   //
//     int         maxstack)                                                  //
//                                                                            //
// Custom constructor #1 for LIFO stack.                                      //
// ========================================================================== //
// INPUT                                                                      //
// ========================================================================== //
// - maxstack   : int, maximal stack size before resize.                      //
// ========================================================================== //
// OUTPUT                                                                     //
// ========================================================================== //
// - none                                                                     //
// ========================================================================== //

// ========================================================================== //
// VARIABLES DECLARATION                                                      //
// ========================================================================== //

// Local variables
// none

// Counters
// none

// ========================================================================== //
// CREATE LIFO STACK                                                          //
// ========================================================================== //

// Max stack dimensions
MAXSTK = maxstack;

// Initialize stack
IncreaseSTACK();

// Currenst stack size
TOPSTK = 0;

return; };

// -------------------------------------------------------------------------- //
template <class T>
LIFOstack<T>::LIFOstack(
    vector<T>  &items
) {

// ========================================================================== //
// template <class T>                                                         //
// LIFOstack<T>::LIFOstack(                                                   //
//     vector<T>  &items)                                                     //
//                                                                            //
// Custom constructor #2 for LIFO stack.                                      //
// ========================================================================== //
// INPUT                                                                      //
// ========================================================================== //
// - items      : vector<T>, items to be put into the stack                   //
// ========================================================================== //
// OUTPUT                                                                     //
// ========================================================================== //
// - none                                                                     //
// ========================================================================== //

// ========================================================================== //
// VARIABLES DECLARATION                                                      //
// ========================================================================== //

// Local variables
// none

// Counters
// none

// ========================================================================== //
// CREATE LIFO STACK                                                          //
// ========================================================================== //

// Max stack dimensions
MAXSTK = items.size();

// Initialize stack
IncreaseSTACK();

// Currenst stack size
TOPSTK = 0;

// Put items into the stack
PUSH(items);

return; };

// Destructors ============================================================== //

// -------------------------------------------------------------------------- //
template <class T>
LIFOstack<T>::~LIFOstack(
    void
) {

// ========================================================================== //
// template <class T>                                                         //
// LIFOstack<T>::~LIFOstack(                                                  //
//     void)                                                                  //
//                                                                            //
// Standard destructor for LIFO stack.                                        //
// ========================================================================== //
// INPUT                                                                      //
// ========================================================================== //
// - none                                                                     //
// ========================================================================== //
// OUTPUT                                                                     //
// ========================================================================== //
// - none                                                                     //
// ========================================================================== //

// ========================================================================== //
// VARIABLES DECLARATION                                                      //
// ========================================================================== //

// Local variables
// none

// Counters
// none

// ========================================================================== //
// DESTROY LIFO STACK                                                         //
// ========================================================================== //

// Maximal stack size
MAXSTK = 0;

// Current stack dimensions
TOPSTK = 0;

// Destroy items
STACK.clear();

return; };

// Methods ================================================================== //

// -------------------------------------------------------------------------- //
template <class T>
void LIFOstack<T>::clear(
    void
) {

// ========================================================================== //
// template <class T>                                                         //
// void LIFOstack<T>::clear(                                                  //
//     void)                                                                  //
//                                                                            //
// Clear content of LIFO stack.                                               //
// ========================================================================== //
// INPUT                                                                      //
// ========================================================================== //
// - none                                                                     //
// ========================================================================== //
// OUTPUT                                                                     //
// ========================================================================== //
// - none                                                                     //
// ========================================================================== //

// ========================================================================== //
// VARIABLES DECLARATION                                                      //
// ========================================================================== //

// Local variables
// none

// Counters
// none

// ========================================================================== //
// CLEAR CONTENT                                                              //
// ========================================================================== //
TOPSTK = 0;
STACK.resize(MAXSTK);

return; }

// -------------------------------------------------------------------------- //
template <class T>
void LIFOstack<T>::IncreaseSTACK(
    void
) {

// ========================================================================== //
// template <class T>                                                         //
// void LIFOstack<T>::IncreaseSTACK(                                          //
//     void)                                                                  //
//                                                                            //
// Increase stack size.                                                       //
// ========================================================================== //
// INPUT                                                                      //
// ========================================================================== //
// - none                                                                     //
// ========================================================================== //
// OUTPUT                                                                     //
// ========================================================================== //
// - none                                                                     //
// ========================================================================== //

// ========================================================================== //
// VARIABLES DECLARATION                                                      //
// ========================================================================== //

// Local variables
// none

// Counters
// none

// ========================================================================== //
// INCREASE STACK SIZE                                                        //
// ========================================================================== //
STACK.resize(STACK.size() + MAXSTK);

return; };

// -------------------------------------------------------------------------- //
template <class T>
void LIFOstack<T>::DecreaseSTACK(
    void
) {

// ========================================================================== //
// template <class T>                                                         //
// void LIFOstack<T>::DecreaseSTACK(                                          //
//     void)                                                                  //
//                                                                            //
// Decrease stack size.                                                       //
// ========================================================================== //
// INPUT                                                                      //
// ========================================================================== //
// - none                                                                     //
// ========================================================================== //
// OUTPUT                                                                     //
// ========================================================================== //
// - none                                                                     //
// ========================================================================== //

// ========================================================================== //
// VARIABLES DECLARATION                                                      //
// ========================================================================== //

// Local variables
// none

// Counters
// none

// ========================================================================== //
// DECREASE STACK SIZE                                                        //
// ========================================================================== //
STACK.resize(max((int) (STACK.size() - MAXSTK), MAXSTK));

return; };

// -------------------------------------------------------------------------- //
template <class T>
T LIFOstack<T>::pop(
    void
) {

// ========================================================================== //
// template <class T>                                                         //
// T LIFOstack<T>::POP(                                                       //
//     void)                                                                  //
//                                                                            //
// Remove last element from a LIFO stack list.                                //
// ========================================================================== //
// INPUT                                                                      //
// ========================================================================== //
// - none                                                                     //
// ========================================================================== //
// OUTPUT                                                                     //
// ========================================================================== //
// - item      : T, last element from the stack list                          //
// ========================================================================== //

// ========================================================================== //
// VARIABLES DECLARATION                                                      //
// ========================================================================== //

// Local variables
T       item;

// Counters
// none

// ========================================================================== //
// POP LAST ELEMENT FROM THE LIFO STACK                                       //
// ========================================================================== //

// Extract last element from the stack list --------------------------------- //
item = STACK[TOPSTK - 1];
TOPSTK--;

// Resize stack list -------------------------------------------------------- //
if (TOPSTK <= STACK.size() - MAXSTK) {
    DecreaseSTACK();
}

return(item); };

// -------------------------------------------------------------------------- //
template <class T>
void LIFOstack<T>::push(
    T item
) {

// ========================================================================== //
// template <class T>                                                         //
// void LIFOstack<T>::PUSH(                                                   //
//     T item)                                                                //
//                                                                            //
// Add element to a LIFO stack list.                                          //
// ========================================================================== //
// INPUT                                                                      //
// ========================================================================== //
// - item      : T, element to be added to the stack list                     //
// ========================================================================== //
// OUTPUT                                                                     //
// ========================================================================== //
// - none                                                                     //
// ========================================================================== //

// ========================================================================== //
// VARIABLES DECLARATION                                                      //
// ========================================================================== //

// Local variables
// none

// Counters
// none

// ========================================================================== //
// POP LAST ELEMENT FROM THE LIFO STACK                                       //
// ========================================================================== //

// Resize stack list -------------------------------------------------------- //
if (TOPSTK >= STACK.size()) {
    IncreaseSTACK();
}

// Extract last element from the stack list --------------------------------- //
STACK[TOPSTK] = item;
TOPSTK++;

return; };

// -------------------------------------------------------------------------- //
template <class T>
void LIFOstack<T>::push(
    vector<T> &items
) {

// ========================================================================== //
// template <class T>                                                         //
// void LIFOstack<T>::PUSH(                                                   //
//     vector<T> &items)                                                      //
//                                                                            //
// Push several items in a LIFO stack.                                        //
// ========================================================================== //
// INPUT                                                                      //
// ========================================================================== //
// - items       : vector<T>, vector of elements to be pushed into the stack  //
//                 list.                                                      //
// ========================================================================== //
// OUTPUT                                                                     //
// ========================================================================== //
// - none                                                                     //
// ========================================================================== //

// ========================================================================== //
// VARIABLES DECLARATION                                                      //
// ========================================================================== //

// Local variables
int            n_items;

// Counters
int            i;

// ========================================================================== //
// PUSH ITEMS INTO THE STACK                                                  //
// ========================================================================== //
n_items = items.size();
for (i = 0; i < n_items; i++) {
    PUSH(items[i]);
} //next i

return; };

// -------------------------------------------------------------------------- //
template <class T>
void LIFOstack<T>::display(
    ostream &out
) {

// ========================================================================== //
// template <class T>                                                         //
// void LIFOstack<T>::display(                                                //
//     ostream &out)                                                          //
//                                                                            //
// Display LIFO stack content.                                                //
// ========================================================================== //
// INPUT                                                                      //
// ========================================================================== //
// - out     : ostream, output stream                                         //
// ========================================================================== //
// OUTPUT                                                                     //
// ========================================================================== //
// - none                                                                     //
// ========================================================================== //

// ========================================================================== //
// VARIABLES DECLARATION                                                      //
// ========================================================================== //

// Local variables
// none

// Counters
// none

// ========================================================================== //
// DISPLAY LIFO INFO                                                          //
// ========================================================================== //
out << "LIFO stack:" << endl;
out << "  n. of elements:      " << TOPSTK          << endl;
out << "  stack buffer:        " << MAXSTK          << endl;
out << "  data struct. size:   " << STACK.size()    << endl;
out << "  data: " << endl;
out << "[";
for (int i = 0; i < TOPSTK-1; i++) {
    out << STACK[i] << ", ";
} //next i
out << STACK[TOPSTK-1] << "]" << endl;

return; };
